목표
- Non Blocking 자료 구조의 제작 실습
- 일반 자료구조를 멀티쓰레드 자료구조로 변환한다.
- Blocking 자료구조로부터 시작하여 단계별로 성능향상 기법을 적용한다.
- 최종적으로 Lock Free 자료구조를 제작한다.
- 각 자료구조의 성능을 비교한다.

목표 자료구조
- SET
	. 아이템의 중복을 허용하지 않는다.
	. 정렬되어 저장된다. (unordered_set이 아니다)
	  - 검색 효율이 증가한다.
	. 삽입 삭제의 효율성을 위해 연결리스트로 구현된다.
- 구현할 메소드
	. add(x) : 집합에 x 추가, 성공시 true 반환
	. remove(x) : 집합에서 x 제거, 성공시 true 반환
	. contains(x) : 집합에 x가 있다면 true 반환

추가적인 구현
- 보초 노드
	. 검색의 효율성을 위해 항상 존재하는 Head와 Tail 노드를 갖도록 한다.
	. Head는 MAXINT, Tail은 -MAXINT를 키로 갖는다.

구현 차례
- 성긴 동기화 (coarse-grained synchronization)
	. Lock 하나로 동기화 객체 전체를 감싸는 경우
- 세밀한 동기화
- 낙천적인 동기화
- 게으른 동기화
- 비멈춤 동기화


